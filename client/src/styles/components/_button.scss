// Button component using BEM methodology
.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $spacing-sm;
  padding: $spacing-sm $spacing-lg;
  border: 2px solid transparent;
  border-radius: $radius-md;
  font-size: $font-base;
  font-weight: $font-medium;
  line-height: 1;
  cursor: pointer;
  transition: all $transition-fast;
  text-decoration: none;
  user-select: none;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px $color-primary;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }

  // Primary variant
  &--primary {
    background: linear-gradient(135deg, $color-primary, $color-primary-hover);
    color: white;
    border-color: $color-primary;

    &:hover:not(:disabled) {
      background: linear-gradient(135deg, $color-primary-hover, darken($color-primary-hover, 10%));
      transform: translateY(-1px);
      box-shadow: $shadow-lg;
    }

    &:active {
      transform: translateY(0);
    }
  }

  // Secondary variant
  &--secondary {
    background: linear-gradient(135deg, $color-secondary, $color-secondary-hover);
    color: white;
    border-color: $color-secondary;

    &:hover:not(:disabled) {
      background: linear-gradient(135deg, $color-secondary-hover, darken($color-secondary-hover, 10%));
      transform: translateY(-1px);
      box-shadow: $shadow-lg;
    }
  }

  // Outline variant
  &--outline {
    background: $color-bg-secondary;
    color: $color-text-primary;
    border-color: $color-bg-tertiary;

    &:hover:not(:disabled) {
      background: $color-bg-tertiary;
      border-color: $color-text-muted;
    }
  }

  // Destructive variant
  &--destructive {
    background: linear-gradient(135deg, $color-error, darken($color-error, 10%));
    color: white;
    border-color: $color-error;

    &:hover:not(:disabled) {
      background: linear-gradient(135deg, darken($color-error, 10%), darken($color-error, 20%));
      transform: translateY(-1px);
    }
  }

  // Ghost variant
  &--ghost {
    background: transparent;
    color: $color-text-primary;
    border-color: transparent;

    &:hover:not(:disabled) {
      background: $color-bg-secondary;
    }
  }

  // Size variants
  &--sm {
    padding: $spacing-xs $spacing-md;
    font-size: $font-sm;
  }

  &--lg {
    padding: $spacing-md $spacing-xl;
    font-size: $font-lg;
  }

  &--xl {
    padding: $spacing-lg $spacing-2xl;
    font-size: $font-xl;
  }

  // Icon button
  &--icon {
    padding: $spacing-sm;
    aspect-ratio: 1;
  }

  // Loading state
  &--loading {
    cursor: wait;
    
    .button__spinner {
      display: inline-block;
      width: 1em;
      height: 1em;
      border: 2px solid transparent;
      border-top-color: currentColor;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
  }

  // Full width
  &--full-width {
    width: 100%;
  }

  // With gradient hover effect
  &--gradient-hover {
    position: relative;
    overflow: hidden;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: left $transition-base;
    }

    &:hover::before {
      left: 100%;
    }
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}